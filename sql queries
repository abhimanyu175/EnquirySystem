Query 1
--Create the table
CREATE TABLE Student (
  Stud_no INTEGER PRIMARY KEY,
  Stud_name VARCHAR(50) NOT NULL
);

CREATE TABLE Membership (
  Mem_no INTEGER PRIMARY KEY,
  Stud_no INTEGER NOT NULL,
  FOREIGN KEY (Stud_no) REFERENCES Student(Stud_no) ON DELETE CASCADE
);

CREATE TABLE Book (
  book_no INTEGER PRIMARY KEY,
  book_name VARCHAR(100) NOT NULL,
  author VARCHAR(50) NOT NULL
);

CREATE TABLE Iss_rec (
  iss_no INTEGER PRIMARY KEY,
  iss_date DATE NOT NULL,
  Mem_no INTEGER NOT NULL,
  book_no INTEGER NOT NULL,
  FOREIGN KEY (Mem_no) REFERENCES Membership(Mem_no) ON DELETE CASCADE,
  FOREIGN KEY (book_no) REFERENCES Book(book_no) ON DELETE CASCADE
);

-- Inserting records into the Student table
INSERT INTO Student (Stud_no, Stud_name) VALUES
(1, 'Abhimanyu'),
(2, 'Archi'),
(3, 'Sthuthi'),
(4, 'Mimansa'),
(5, 'Abhishek'),
(6, 'Racy'),
(7, 'Tasvi'),
(8, 'Prerana'),
(9, 'Aryan'),
(10, 'Omkar');

-- Inserting records into the Membership table
INSERT INTO Membership (Mem_no, Stud_no) VALUES
(101, 1),
(102, 2),
(103, 3),
(104, 4),
(105, 5),
(106, 6),
(107, 7),
(108, 8),
(109, 9),
(110, 10);

-- Inserting records into the Book table
INSERT INTO Book (book_no, book_name, author) VALUES
(201, 'Thus Spoke Zarathustra', 'Friedrich Nietzsche'),
(202, 'Percy Jackson and the Olympians', 'Rick Riordan'),
(203, 'Introduction to Software Engineering', 'Ian Somerville'),
(204, 'Marvel Comics', 'Stan Lee'),
(205, 'Mathematics for kids', 'LKG Kids'),
(206, 'The Hobbit', 'J.R.R. Tolkien'),
(207, 'The Subtle Art of not giving a fuck', 'Mark Manson'),
(208, 'Genetic Engineering', 'Steffi Dennis'),
(209, 'How to think like a child', 'John DSouza'),
(210, 'Vanakkam Chennai', 'Thala');

-- Inserting records into the Iss_rec table
INSERT INTO Iss_rec (iss_no, iss_date, Mem_no, book_no) VALUES
(301, '2023-07-20', 101, 201),
(302, '2023-07-19', 102, 203),
(303, '2023-07-18', 103, 206),
(304, '2023-07-18', 104, 204),
(305, '2023-07-17', 105, 207),
(306, '2023-07-16', 106, 205),
(307, '2023-07-15', 107, 208),
(308, '2023-07-15', 108, 209),
(309, '2023-07-14', 109, 210),
(310, '2023-07-14', 110, 202);

--List all the student names with their membership numbers: 
SELECT Stud_name, Mem_no
FROM Student
JOIN Membership ON Student.Stud_no = Membership.Stud_no;

-- List all the issues for the current date with student and Book names:
SELECT Stud_name, book_name
FROM Student
JOIN Membership ON Student.Stud_no = Membership.Stud_no
JOIN Iss_rec ON Membership.Mem_no = Iss_rec.Mem_no
JOIN Book ON Iss_rec.book_no = Book.book_no
WHERE iss_date = CURDATE();

-- Give a count of how many books have been bought by each student:
SELECT Stud_name, COUNT(*) AS total_books_bought
FROM Student
JOIN Membership ON Student.Stud_no = Membership.Stud_no
JOIN Iss_rec ON Membership.Mem_no = Iss_rec.Mem_no
GROUP BY Stud_name;

--Give a list of books taken by student with stud_no as 5:
SELECT Stud_name, book_name
FROM Student
JOIN Membership ON Student.Stud_no = Membership.Stud_no
JOIN Iss_rec ON Membership.Mem_no = Iss_rec.Mem_no
JOIN Book ON Iss_rec.book_no = Book.book_no
WHERE Student.Stud_no = 5;



Query 2


CREATE TABLE STUDENT (
  Rollno INTEGER PRIMARY KEY,
  Name VARCHAR(50) NOT NULL,
  Sem INTEGER NOT NULL,
  Degree VARCHAR(50) NOT NULL,
  Contact_no INTEGER NOT NULL,
  Guide_No INTEGER,
  FOREIGN KEY (Guide_No) REFERENCES GUIDE(Guide_No) ON DELETE SET NULL
);

CREATE TABLE GUIDE (
  Guide_No INTEGER PRIMARY KEY,
  Guide_name VARCHAR(50) NOT NULL,
  Guide_research_domain VARCHAR(100) NOT NULL,
  Contact_No INTEGER NOT NULL,
  Email_Id VARCHAR(100) NOT NULL
);

CREATE TABLE PROJECT (
  Project_No INTEGER PRIMARY KEY,
  Project_title VARCHAR(100) NOT NULL,
  Project_Area VARCHAR(100) NOT NULL,
  Start_dt DATE NOT NULL,
  Guide_No INTEGER,
  FOREIGN KEY (Guide_No) REFERENCES GUIDE(Guide_No) ON DELETE SET NULL
);

CREATE TABLE TGROUP (
  Group_Code INTEGER PRIMARY KEY,
  Roll_No INTEGER NOT NULL,
  FOREIGN KEY (Roll_No) REFERENCES STUDENT(Rollno) ON DELETE CASCADE
);

CREATE TABLE PROJECT_GROUP (
  Group_Code INTEGER,
  Project_No INTEGER,
  no_of_students INTEGER NOT NULL,
  PRIMARY KEY (Group_Code, Project_No),
  FOREIGN KEY (Group_Code) REFERENCES TGROUP(Group_Code) ON DELETE CASCADE,
  FOREIGN KEY (Project_No) REFERENCES PROJECT(Project_No) ON DELETE CASCADE
);

--Inserting values:
-- Inserting records into the STUDENT table
INSERT INTO STUDENT (Rollno, Name, Sem, Degree, Contact_no, Guide_No) VALUES
(101, 'John Doe', 3, 'Computer Science', 12345890, 201),
(102, 'Jane Smith', 4, 'Information Technology', 98765210, 202),
(103, 'Michael Johnson', 2, 'Electrical Engineering', 45690123, 201),
(104, 'Emily Brown', 4, 'Mechanical Engineering', 78903456, 203),
(105, 'William Lee', 3, 'Civil Engineering', 23456901, NULL),
(106, 'Sophia Wang', 2, 'Computer Science', 89014567, 201),
(107, 'Daniel Kim', 3, 'Information Technology', 56701234, 203),
(108, 'Olivia Wilson', 4, 'Computer Science', 90123458, 202),
(109, 'James Chen', 2, 'Electronics Engineering', 34567012, 201),
(110, 'Isabella Lopez', 3, 'Mechanical Engineering', 67890345, 202);

-- Inserting records into the GUIDE table
INSERT INTO GUIDE (Guide_No, Guide_name, Guide_research_domain, Contact_No, Email_Id) VALUES
(201, 'Dr. Smith', 'Computer Science', 99988877, 'smith@example.com'),
(202, 'Prof. Johnson', 'Information Technology', 88876666, 'johnson@example.com'),
(203, 'Dr. Lee', 'Mechanical Engineering', 77766655, 'lee@example.com'),
(204, 'Prof. Brown', 'Electrical Engineering', 66654444, 'brown@example.com'),
(205, 'Dr. White', 'Civil Engineering', 55544333, 'white@example.com');

-- Inserting records into the PROJECT table
INSERT INTO PROJECT (Project_No, Project_title, Project_Area, Start_dt, Guide_No) VALUES
(301, 'Data Analysis in Healthcare', 'Data Science', '2023-01-15', 201),
(302, 'Web Development for E-commerce', 'Computer Science', '2023-02-20', 202),
(303, 'Automated Manufacturing Systems', 'Mechanical Engineering', '2023-03-10', 203),
(304, 'Internet of Things in Smart Cities', 'Information Technology', '2023-04-05', 202),
(305, 'Renewable Energy Solutions', 'Electrical Engineering', '2023-05-12', 204),
(306, 'Structural Analysis of Bridges', 'Civil Engineering', '2023-06-30', 205),
(307, 'Machine Learning Applications', 'Data Science', '2023-07-10', 201),
(308, 'Mobile App Development', 'Computer Science', '2023-08-15', NULL),
(309, 'Robotics in Manufacturing', 'Mechanical Engineering', '2023-09-22', 203),
(310, 'Cybersecurity Measures', 'Information Technology', '2023-10-17', 202);

-- Inserting records into the GROUP table
INSERT INTO TGROUP (Group_Code, Roll_No) VALUES
(401, 101),
(402, 102),
(403, 103),
(404, 104),
(405, 105),
(406, 106),
(407, 107),
(408, 108),
(409, 109),
(410, 110);

-- Inserting records into the PROJECT_GROUP table
INSERT INTO PROJECT_GROUP (Group_Code, Project_No, no_of_students) VALUES
(401, 301, 4),
(402, 302, 3),
(403, 303, 5),
(404, 304, 2),
(405, 305, 3),
(406, 306, 4),
(407, 307, 3),
(408, 308, 2),
(409, 309, 5),
(410, 310, 3);



Query 3
-- Create the tables
CREATE TABLE flights (
  flno INT NOT NULL AUTO_INCREMENT,
  from VARCHAR(255) NOT NULL,
  to VARCHAR(255) NOT NULL,
  distance INT NOT NULL,
  departs TIME NOT NULL,
  arrives TIME NOT NULL,
  price INT NOT NULL,
  PRIMARY KEY (flno)
);

CREATE TABLE aircraft (
  aid INT NOT NULL AUTO_INCREMENT,
  aname VARCHAR(255) NOT NULL,
  cruisingrange INT NOT NULL,
  PRIMARY KEY (aid)
);

CREATE TABLE certified (
  eid INT NOT NULL,
  aid INT NOT NULL,
  PRIMARY KEY (eid, aid),
  FOREIGN KEY (eid) REFERENCES employees (eid),
  FOREIGN KEY (aid) REFERENCES aircraft (aid)
);

CREATE TABLE employees (
  eid INT NOT NULL AUTO_INCREMENT,
  ename VARCHAR(255) NOT NULL,
  salary INT NOT NULL,
  PRIMARY KEY (eid)
);

-- Insert around 10 records in each of the tables
INSERT INTO flights (from, to, distance, departs, arrives, price) VALUES
  ('Los Angeles', 'Honolulu', 2500, '8:00 AM', '12:00 PM', 400),
  ('New York', 'London', 3500, '10:00 AM', '2:00 PM', 500),
  ('Chicago', 'Tokyo', 6000, '12:00 PM', '6:00 PM', 700);

INSERT INTO aircraft (aname, cruisingrange) VALUES
  ('Boeing 747', 10000),
  ('Airbus A380', 15000),
  ('Boeing 787 Dreamliner', 8000);

INSERT INTO certified (eid, aid) VALUES
  (1, 1),
  (2, 2),
  (3, 3),
  (4, 1),
  (5, 2);

INSERT INTO employees (ename, salary) VALUES
  ('John Doe', 100000),
  ('Jane Doe', 80000),
  ('Peter Smith', 60000),
  ('David Jones', 70000),
  ('Sarah Brown', 50000);

-- Find the names of aircraft such that all pilots certified to operate them earn more than 80,000
SELECT aname
FROM aircraft
WHERE aid IN (
  SELECT aid
  FROM certified
  GROUP BY aid
  HAVING MAX(salary) > 80000
);

-- For each pilot who is certified for more than three aircraft, find the eid and the maximum cruising range of the aircraft that he (or she) is certified for
SELECT eid, MAX(cruisingrange) AS max_cruisingrange
FROM certified
GROUP BY eid
HAVING COUNT(*) > 3;

-- Find the names of pilots whose salary is less than the price of the cheapest route from Los Angeles to Honolulu
SELECT ename
FROM employees
WHERE salary < (
  SELECT price
  FROM flights
  WHERE from = 'Los Angeles'
  AND to = 'Honolulu'
  ORDER BY price
  LIMIT 1
);

-- Find the second highest salary of an employee
SELECT MAX(salary) AS second_highest_salary
FROM employees
WHERE salary < (
  SELECT MAX(salary)
  FROM employees
);






Query 4
-- Create the tables
CREATE TABLE Employee (
  Emp_id integer PRIMARY KEY,
  F_name string NOT NULL,
  L_name string NOT NULL,
  Bdate date,
  Address string,
  Gender string,
  Salary integer,
  Super_Emp_id integer,
  D_no integer
);

CREATE TABLE Department (
  D_name string NOT NULL,
  D_no integer PRIMARY KEY,
  D_Mgr_id integer,
  Mgr_start_date date
);

CREATE TABLE Dept_Location (
  D_no integer,
  D_location string NOT NULL
);

CREATE TABLE Project (
  P_name string NOT NULL,
  P_number integer PRIMARY KEY,
  P_location string,
  D_no integer
);

CREATE TABLE Works_on (
  Emp_id integer,
  P_no integer,
  Hours integer
);

CREATE TABLE Dependent (
  Emp_id integer,
  Dependent_name string NOT NULL,
  Gender string,
  Bdate date,
  Relationship string
);

-- Insert data
INSERT INTO Employee (Emp_id, F_name, L_name, Bdate, Address, Gender, Salary, Super_Emp_id, D_no)
VALUES (1001, 'John', 'Doe', '1960-01-01', '123 Main Street', 'M', 100000, NULL, 1);

INSERT INTO Employee (Emp_id, F_name, L_name, Bdate, Address, Gender, Salary, Super_Emp_id, D_no)
VALUES (1002, 'Jane', 'Smith', '1965-02-02', '456 Elm Street', 'F', 50000, 1001, 1);

INSERT INTO Employee (Emp_id, F_name, L_name, Bdate, Address, Gender, Salary, Super_Emp_id, D_no)
VALUES (1003, 'Mary', 'Jones', '1970-03-03', '789 Oak Street', 'F', 75000, NULL, 2);

INSERT INTO Department (D_name, D_no, D_Mgr_id, Mgr_start_date)
VALUES ('Sales', 1, 1001, '2010-01-01');

INSERT INTO Department (D_name, D_no, D_Mgr_id, Mgr_start_date)
VALUES ('Marketing', 2, 1003, '2015-01-01');

INSERT INTO Dept_Location (D_no, D_location)
VALUES (1, 'New York City');

INSERT INTO Dept_Location (D_no, D_location)
VALUES (2, 'San Francisco');

INSERT INTO Project (P_name, P_number, P_location, D_no)
VALUES ('Project 1', 1, 'New York City', 1);

INSERT INTO Project (P_name, P_number, P_location, D_no)
VALUES ('Project 2', 2, 'San Francisco', 2);

INSERT INTO Works_on (Emp_id, P_no, Hours)
VALUES (1001, 1, 100);

INSERT INTO Works_on (Emp_id, P_no, Hours)
VALUES (1002, 1, 50);

INSERT INTO Works_on (Emp_id, P_no, Hours)
VALUES (1003, 2, 200);

INSERT INTO Dependent (Emp_id, Dependent_name, Gender, Bdate, Relationship)
VALUES (1001, 'John Jr.', 'M', '2000-01-01', 'Son');

INSERT INTO Dependent (Emp_id, Dependent_name, Gender, Bdate, Relationship)

-- Find the names and address of all employees who work on same department.

SELECT Emp_id, F_name, L_name, Address
FROM Employee
WHERE D_no IN (
  SELECT D_no
  FROM Department
  WHERE D_name = 'Sales'
);

-- Retrieve a list of employees and the projects they are working on, ordered by department

-- and, within each department, ordered alphabetically by last name, then first name.

SELECT Emp_id, F_name, L_name, P_name, P_location
FROM Employee
INNER JOIN Works_on ON Employee.Emp_id = Works_on.Emp_id
INNER JOIN Project ON Works_on.P_no = Project.P_number
ORDER BY D_no, L_name, F_name;

-- Create a view Dept info that gives details of department name, Number of employees and total salary of each employee.

CREATE VIEW Dept_info AS
SELECT D_name,
       COUNT(Emp_id) AS Num_employees,
       SUM(Salary) AS Total_salary
FROM Employee
INNER JOIN Department ON Employee.D_no = Department.D_no
GROUP BY D_name;





Query 5
-- Insert data
INSERT INTO Sailors (sid, sname, rating, age)
VALUES (1, 'Dustin', 7, 45.0);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (2, 'Brutus', 1, 33.0);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (3, 'Lubber', 8, 55.5);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (4, 'Andy', 8, 25.5);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (5, 'Rusty', 10, 35.0);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (6, 'Horatio', 7, 35.0);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (7, 'Zorba', 10, 16.0);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (8, 'Horatio', 9, 40.0);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (9, 'Art', 3, 25.5);

INSERT INTO Sailors (sid, sname, rating, age)
VALUES (10, 'Bob', 3, 63.5);

INSERT INTO Boats (bid, bname, color)
VALUES (1, 'Interlake', 'blue');

INSERT INTO Boats (bid, bname, color)
VALUES (2, 'Interlake', 'red');

INSERT INTO Boats (bid, bname, color)
VALUES (3, 'Clipper', 'green');

INSERT INTO Boats (bid, bname, color)
VALUES (4, 'Marine', 'red');

INSERT INTO Reserves (sid, bid, day)
VALUES (1, 1, '2023-07-19');

INSERT INTO Reserves (sid, bid, day)
VALUES (1, 2, '2023-07-20');

INSERT INTO Reserves (sid, bid, day)
VALUES (2, 1, '2023-07-21');

INSERT INTO Reserves (sid, bid, day)
VALUES (3, 2, '2023-07-22');

INSERT INTO Reserves (sid, bid, day)
VALUES (4, 1, '2023-07-23');

INSERT INTO Reserves (sid, bid, day)
VALUES (5, 2, '2023-07-24');

INSERT INTO Reserves (sid, bid, day)
VALUES (6, 1, '2023-07-25');

INSERT INTO Reserves (sid, bid, day)
VALUES (7, 2, '2023-07-26');

INSERT INTO Reserves (sid, bid, day)
VALUES (8, 1, '2023-07-27');

INSERT INTO Reserves (sid, bid, day)
VALUES (9, 2, '2023-07-28');

SELECT sname, age
FROM Sailors S
JOIN Reserves R ON S.sid = R.sid
JOIN Boats B ON R.bid = B.bid
WHERE B.color = 'red'
ORDER BY age;


